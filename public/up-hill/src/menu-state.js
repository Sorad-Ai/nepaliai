// Generated by CoffeeScript 1.9.2
var MenuState, g_menu;

g_menu = null;

MenuState = (function() {
    function MenuState() {
        this.levels = [];
        this.cars = [];
        this.pointer1 = null;
        this.down_flag = false;
        this.sx = 0;
        this.sy = 0;
        this.levels_y = 0;
        this.scroll_lim = 0;
        this.duration = 0;
        this.cur_buy_level = null;
        this.cur_buy_car = null;
        g_menu = this;
    }

    MenuState.prototype.create = function() {
        var back_spr, back_upgrade_btn, btn, car, front_spr, i, j, k, len, len1, level, lock, play_upgrade_btn, ref, ref1, spr, step, txt, x, xx, y, yy;
        this.isEnabledIncentivise = false; //SG_Hooks.isEnabledIncentiviseButton();
        this.game_data = game.cache.getJSON('data');
        this.strings = game.cache.getJSON('strings');
        // if (game.device.webAudio) {
        //   this.button_snd = game.add.audio('button');
        //   this.buy_snd = game.add.audio('buy');
        // }
        this.back_grp = game.add.group();
        this.cars_grp = game.add.group();
        this.levels_grp = game.add.group();
        this.front_grp = game.add.group();
        this.buy_level_grp = game.add.group();
        this.buy_level_grp.visible = false;
        this.buy_car_grp = game.add.group();
        this.buy_car_grp.visible = false;
        this.main_grp = game.add.group();
        this.main_grp.fixedToCamera = true;
        this.main_grp.add(this.back_grp);
        this.main_grp.add(this.levels_grp);
        this.main_grp.add(this.cars_grp);
        this.main_grp.add(this.front_grp);
        this.main_grp.add(this.buy_level_grp);
        this.main_grp.add(this.buy_car_grp);
        this.upgrade_grp = game.add.group();
        this.upgrade_grp.fixedToCamera = true;
        this.buy_up_grp = game.add.group();
        this.buy_up_grp.visible = false;
        if (this.isEnabledIncentivise) {
            this.initAdFlow();
        }
        back_spr = game.add.sprite(0, 0, 'main_menu_back.png');
        this.back_grp.add(back_spr);
        front_spr = game.add.sprite(0, 0, 'main_menu_front.png');
        this.front_grp.add(front_spr);
        // btn = game.add.button(705, 20, 'gui', this.gamesClk, this, 'games.png', 'games.png', 'games_pushed.png');
        // this.front_grp.add(btn);
        if (game.g_player.sound) {
            this.sound_btn = game.add.button(755, 158, 'gui', this.soundClk, this, 'sound_on.png', 'sound_on.png', 'sound_on_pushed.png');
        } else {
            this.sound_btn = game.add.button(755, 158, 'gui', this.soundClk, this, 'sound_off.png', 'sound_off.png', 'sound_off_pushed.png');
        }
        this.front_grp.add(this.sound_btn);
        if (this.isEnabledIncentivise) {
            btn = game.add.button(737, 337, 'gui', this.morecoinsClk, this, 'morecoins.png', 'morecoins.png', 'morecoins_pushed.png');
            this.front_grp.add(btn);
        }
        btn = game.add.button(705, 490, 'gui', this.playClk, this, 'play_button.png', 'play_button.png', 'play_button_push.png');
        this.front_grp.add(btn);
        this.selected_level_spr = game.add.sprite(0, 0, 'gui', 'active_world_car.png');
        this.levels_grp.add(this.selected_level_spr);
        this.selected_car_spr = game.add.sprite(0, 0, 'gui', 'active_world_car.png');
        this.cars_grp.add(this.selected_car_spr);
        //var style_label = {font: 25 + "px Grobold", fill: "#ffffff", align: "center"};
        this.money_text = game.add.text(830, 305, '' + game.g_player.coins, style_label);
        this.front_grp.add(this.money_text);
        this.money_text.anchor.setTo(0.5);
        this.money_text.strokeThickness = 5;
        this.money_spr = game.add.sprite(0, 0, 'gui', 'coin_gui.png');
        this.money_spr.scale.x = 0.7;
        this.money_spr.scale.y = 0.7;
        this.money_spr.x = this.money_text.x - this.money_text.width / 2 - this.money_spr.width - 5;
        this.money_spr.y = this.money_text.y - 24;
        this.front_grp.add(this.money_spr);
        spr = game.add.sprite(0, 0, 'block.png');
        this.buy_level_grp.add(spr);
        spr.inputEnabled = true;
        spr = game.add.sprite(0, 0, 'gui', 'buy_dialog.png');
        spr.x = (game.width - spr.width) / 2;
        spr.y = (game.height - spr.height) / 2 - 100;
        this.buy_level_grp.add(spr);
        txt = game.add.text(spr.x + spr.width / 2, spr.y + 70, this.strings.open_level, style_label);
        this.buy_level_grp.add(txt);
        txt.anchor.setTo(0.5);
        txt.strokeThickness = 5;
        this.buy_level_money_spr = game.add.sprite(0, 0, 'gui', 'coin_gui.png');
        this.buy_level_price = game.add.text(spr.x + spr.width / 2 - this.buy_level_money_spr.width * 0.35, spr.y + 150, this.strings.price, style_label);
        this.buy_level_grp.add(this.buy_level_price);
        this.buy_level_price.anchor.setTo(0.5);
        this.buy_level_price.strokeThickness = 5;
        this.buy_level_money_spr.scale.x = 0.7;
        this.buy_level_money_spr.scale.y = 0.7;
        this.buy_level_grp.add(this.buy_level_money_spr);
        btn = game.add.button(spr.x + 50, spr.y + 200, 'gui', this.buyLevelYClk, this, 'apply_button.png', 'apply_button.png', 'apply_button_push.png');
        this.buy_level_grp.add(btn);
        btn = game.add.button(spr.x + 265, spr.y + 200, 'gui', this.buyLevelNClk, this, 'cancel_button.png', 'cancel_button.png', 'cancel_button_push.png');
        this.buy_level_grp.add(btn);
        spr = game.add.sprite(0, 0, 'block.png');
        this.buy_car_grp.add(spr);
        spr.inputEnabled = true;
        spr = game.add.sprite(0, 0, 'gui', 'buy_dialog.png');
        this.buy_car_grp.add(spr);
        spr.x = (game.width - spr.width) / 2;
        spr.y = (game.height - spr.height) / 2 - 100;
        txt = game.add.text(spr.x + spr.width / 2, spr.y + 70, this.strings.open_car, style_label);
        this.buy_car_grp.add(txt);
        txt.anchor.setTo(0.5);
        txt.strokeThickness = 5;
        this.buy_car_money_spr = game.add.sprite(0, 0, 'gui', 'coin_gui.png');
        this.buy_car_price = game.add.text(spr.x + spr.width / 2 - this.buy_car_money_spr.width * 0.35, spr.y + 150, this.strings.price, style_label);
        this.buy_car_grp.add(this.buy_car_price);
        this.buy_car_price.anchor.setTo(0.5);
        this.buy_car_price.strokeThickness = 5;
        this.buy_car_money_spr.scale.x = 0.7;
        this.buy_car_money_spr.scale.y = 0.7;
        this.buy_car_grp.add(this.buy_car_money_spr);
        btn = game.add.button(spr.x + 50, spr.y + 200, 'gui', this.buyCarYClk, this, 'apply_button.png', 'apply_button.png', 'apply_button_push.png');
        this.buy_car_grp.add(btn);
        btn = game.add.button(spr.x + 265, spr.y + 200, 'gui', this.buyCarNClk, this, 'cancel_button.png', 'cancel_button.png', 'cancel_button_push.png');
        this.buy_car_grp.add(btn);
        spr = game.add.sprite(0, 0, 'block.png');
        this.buy_up_grp.add(spr);
        spr.inputEnabled = true;
        this.buy_up = game.add.sprite(0, 0, 'gui', 'buy_dialog.png');
        this.buy_up_grp.add(this.buy_up);
        this.buy_up.x = (game.width - this.buy_up.width) / 2;
        this.buy_up.y = (game.height - this.buy_up.height) / 2 - 100;
        txt = game.add.text(this.buy_up.x + this.buy_up.width / 2, this.buy_up.y + 70, this.strings.buy_up, style_label);
        this.buy_up_grp.add(txt);
        txt.anchor.setTo(0.5);
        txt.strokeThickness = 5;
        this.buy_up_money_spr = game.add.sprite(0, 0, 'gui', 'coin_gui.png');
        this.buy_up_price = game.add.text(this.buy_up.x + this.buy_up.width / 2 - this.buy_up_money_spr.width * 0.35, this.buy_up.y + 150, this.strings.price, style_label);
        this.buy_up_grp.add(this.buy_up_price);
        this.buy_up_price.anchor.setTo(0.5);
        this.buy_up_price.strokeThickness = 5;
        this.buy_up_money_spr.scale.x = 0.7;
        this.buy_up_money_spr.scale.y = 0.7;
        this.buy_up_grp.add(this.buy_up_money_spr);
        btn = game.add.button(this.buy_up.x + 50, this.buy_up.y + 200, 'gui', this.buyUpYClk, this, 'apply_button.png', 'apply_button.png', 'apply_button_push.png');
        this.buy_up_grp.add(btn);
        btn = game.add.button(this.buy_up.x + 265, this.buy_up.y + 200, 'gui', this.buyUpNClk, this, 'cancel_button.png', 'cancel_button.png', 'cancel_button_push.png');
        this.buy_up_grp.add(btn);
        spr = game.add.sprite(0, 0, 'menu_upgrades_new.png');
        this.upgrade_grp.add(spr);
        this.cur_upg_spr = game.add.sprite(xx, yy, 'gui', 'upg_change.png');
        this.upgrade_grp.add(this.cur_upg_spr);
        this.buy_up_btn = game.add.button(388, 475, 'gui', this.buyUpClk, this, 'buy_0001_Sloy-1.png', 'buy_0001_Sloy-1.png', 'buy_0000_Sloy-1-kopia.png');
        this.upgrade_grp.add(this.buy_up_btn);
        this.money_text_up = game.add.text(480, 610, '' + game.g_player.coins, style_label);
        this.upgrade_grp.add(this.money_text_up);
        this.money_text_up.anchor.setTo(0.5);
        this.money_text_up.strokeThickness = 5;
        this.money_spr_up = game.add.sprite(0, 0, 'gui', 'coin_gui.png');
        this.money_spr_up.scale.x = 0.6;
        this.money_spr_up.scale.y = 0.6;
        this.money_spr_up.x = this.money_text_up.x - this.money_text_up.width / 2 - this.money_text_up.width - 5;
        this.money_spr_up.y = this.money_text_up.y - 21;
        this.upgrade_grp.add(this.money_spr_up);
        this.up_desc_txt = game.add.text(game.width / 2, 310, "", style_label);
        this.upgrade_grp.add(this.up_desc_txt);
        this.up_desc_txt.anchor.setTo(0.5);
        this.up_desc_txt.strokeThickness = 5;
        this.up_desc_txt.wordWrap = true;
        this.up_desc_txt.wordWrapWidth = 790;
        xx = 30;
        yy = 60;
        step = 185;
        this.cur_upg_spr.x = xx - 6;
        this.cur_upg_spr.y = yy - 6;
        btn = game.add.button(xx, yy, 'gui', this.up1Clk, this, 'upg1.png', 'upg1.png', 'upg1_pushed.png');
        this.upgrade_grp.add(btn);
        this.up1_txt = game.add.text(xx + 120, yy + 120, "10", style_label);
        this.upgrade_grp.add(this.up1_txt);
        this.up1_txt.anchor.setTo(0.5);
        this.up1_txt.strokeThickness = 5;
        this.up1_price_txt = game.add.text(xx + 100, yy - 30, "1", style_label);
        this.upgrade_grp.add(this.up1_price_txt);
        this.up1_price_txt.anchor.setTo(0.5);
        this.up1_price_txt.strokeThickness = 5;
        this.up1_price_spr = game.add.sprite(0, 0, 'gui', 'coin_gui.png');
        this.up1_price_spr.scale.x = 0.6;
        this.up1_price_spr.scale.y = 0.6;
        this.up1_price_spr.x = this.up1_price_txt.x - this.up1_price_txt.width / 2 - this.up1_price_spr.width - 5;
        this.up1_price_spr.y = this.up1_price_txt.y - 21;
        this.upgrade_grp.add(this.up1_price_spr);
        xx += step;
        btn = game.add.button(xx, yy, 'gui', this.up2Clk, this, 'upg2.png', 'upg2.png', 'upg2_pushed.png');
        this.upgrade_grp.add(btn);
        this.up2_txt = game.add.text(xx + 120, yy + 120, "88", style_label);
        this.upgrade_grp.add(this.up2_txt);
        this.up2_txt.anchor.setTo(0.5);
        this.up2_txt.strokeThickness = 5;
        this.up2_price_txt = game.add.text(xx + 100, yy - 30, "1", style_label);
        this.upgrade_grp.add(this.up2_price_txt);
        this.up2_price_txt.anchor.setTo(0.5);
        this.up2_price_txt.strokeThickness = 5;
        this.up2_price_spr = game.add.sprite(0, 0, 'gui', 'coin_gui.png');
        this.up2_price_spr.scale.x = 0.6;
        this.up2_price_spr.scale.y = 0.6;
        this.up2_price_spr.x = this.up2_price_txt.x - this.up2_price_txt.width / 2 - this.up2_price_spr.width - 5;
        this.up2_price_spr.y = this.up2_price_txt.y - 21;
        this.upgrade_grp.add(this.up2_price_spr);
        xx += step;
        btn = game.add.button(xx, yy, 'gui', this.up3Clk, this, 'upg3.png', 'upg3.png', 'upg3_pushed.png');
        this.upgrade_grp.add(btn);
        this.up3_txt = game.add.text(xx + 120, yy + 120, "11", style_label);
        this.upgrade_grp.add(this.up3_txt);
        this.up3_txt.anchor.setTo(0.5);
        this.up3_txt.strokeThickness = 5;
        this.up3_price_txt = game.add.text(xx + 100, yy - 30, "1", style_label);
        this.upgrade_grp.add(this.up3_price_txt);
        this.up3_price_txt.anchor.setTo(0.5);
        this.up3_price_txt.strokeThickness = 5;
        this.up3_price_spr = game.add.sprite(0, 0, 'gui', 'coin_gui.png');
        this.up3_price_spr.scale.x = 0.6;
        this.up3_price_spr.scale.y = 0.6;
        this.up3_price_spr.x = this.up3_price_txt.x - this.up3_price_txt.width / 2 - this.up3_price_spr.width - 5;
        this.up3_price_spr.y = this.up3_price_txt.y - 21;
        this.upgrade_grp.add(this.up3_price_spr);
        xx += step;
        btn = game.add.button(xx, yy, 'gui', this.up4Clk, this, 'upg4.png', 'upg4.png', 'upg4_pushed.png');
        this.upgrade_grp.add(btn);
        this.up4_txt = game.add.text(xx + 120, yy + 120, "1", style_label);
        this.upgrade_grp.add(this.up4_txt);
        this.up4_txt.anchor.setTo(0.5);
        this.up4_txt.strokeThickness = 5;
        this.up4_price_txt = game.add.text(xx + 100, yy - 30, "1", style_label);
        this.upgrade_grp.add(this.up4_price_txt);
        this.up4_price_txt.anchor.setTo(0.5);
        this.up4_price_txt.strokeThickness = 5;
        this.up4_price_spr = game.add.sprite(0, 0, 'gui', 'coin_gui.png');
        this.up4_price_spr.scale.x = 0.6;
        this.up4_price_spr.scale.y = 0.6;
        this.up4_price_spr.x = this.up4_price_txt.x - this.up4_price_txt.width / 2 - this.up4_price_spr.width - 5;
        this.up4_price_spr.y = this.up4_price_txt.y - 21;
        this.upgrade_grp.add(this.up4_price_spr);
        xx += step;
        btn = game.add.button(xx, yy, 'gui', this.up5Clk, this, 'upg5.png', 'upg5.png', 'upg5_pushed.png');
        this.upgrade_grp.add(btn);
        this.up5_txt = game.add.text(xx + 120, yy + 120, "1", style_label);
        this.upgrade_grp.add(this.up5_txt);
        this.up5_txt.anchor.setTo(0.5);
        this.up5_txt.strokeThickness = 5;
        this.up5_price_txt = game.add.text(xx + 100, yy - 30, "1", style_label);
        this.upgrade_grp.add(this.up5_price_txt);
        this.up5_price_txt.anchor.setTo(0.5);
        this.up5_price_txt.strokeThickness = 5;
        this.up5_price_spr = game.add.sprite(0, 0, 'gui', 'coin_gui.png');
        this.up5_price_spr.scale.x = 0.6;
        this.up5_price_spr.scale.y = 0.6;
        this.up5_price_spr.x = this.up5_price_txt.x - this.up5_price_txt.width / 2 - this.up5_price_spr.width - 5;
        this.up5_price_spr.y = this.up5_price_txt.y - 21;
        this.upgrade_grp.add(this.up5_price_spr);
        xx += step;
        play_upgrade_btn = game.add.button(705, 450, 'gui', this.upgradePlayClk, this, 'play_button.png', 'play_button.png', 'play_button_push.png');
        this.upgrade_grp.add(play_upgrade_btn);
        back_upgrade_btn = game.add.button(40, 450, 'gui', this.upgradeBackClk, this, 'back_button.png', 'back_button.png', 'back_button_push.png');
        this.upgrade_grp.add(back_upgrade_btn);
        this.upgrade_grp.visible = false;
        this.upgrade_grp.add(this.buy_up_grp);
        this.cur_upg = 'susp';
        x = 67;
        y = 60;
        i = 0;
        ref = this.game_data.cars;
        for (j = 0, len = ref.length; j < len; j++) {
            car = ref[j];
            spr = game.add.sprite(x, y, 'gui', car.gui);
            this.cars_grp.add(spr);
            this.cars.push(spr);
            if (!game.g_player.open_cars[i]) {
                lock = game.add.sprite(0, 17, 'gui', 'lock.png');
                lock.x = (spr.width - lock.width) / 2;
                spr.addChild(lock);
                spr.lock_spr = lock;
            }
            spr.index = i;
            y += 150;
            i++;
        }
        x = 380;
        y = 60;
        this.scroll_lim = 0;
        i = 0;
        ref1 = this.game_data.levels;
        for (k = 0, len1 = ref1.length; k < len1; k++) {
            level = ref1[k];
            spr = game.add.sprite(x, y, 'gui', level.gui);
            this.levels.push(spr);
            this.levels_grp.add(spr);
            if (!game.g_player.open_levels[i]) {
                lock = game.add.sprite(0, 17, 'gui', 'lock.png');
                lock.x = (spr.width - lock.width) / 2;
                spr.addChild(lock);
                spr.lock_spr = lock;
            }
            spr.index = i;
            y += 150;
            this.scroll_lim += 150;
            i++;
        }
        this.scroll_lim -= 534;
        front_spr.inputEnabled = true;
        front_spr.events.onInputDown.add(this.down, this);
        front_spr.events.onInputUp.add(this.up, this);
        this.scroll_levels = game.add.sprite(0, 0, 'gui', 'scroll_world_car.png');
        this.back_grp.add(this.scroll_levels);
        this.scroll_levels.x = 609;
        this.scroll_levels.y = 80;
        this.scroll_cars = game.add.sprite(0, 0, 'gui', 'scroll_world_car.png');
        this.back_grp.add(this.scroll_cars);
        this.scroll_cars.x = 296;
        this.scroll_cars.y = 80;
        this.selected_level_spr.x = this.levels[game.g_player.level].x - 7;
        this.selected_level_spr.y = this.levels[game.g_player.level].y - 4.5;
        this.selected_car_spr.x = this.cars[game.g_player.car].x - 7;
        this.selected_car_spr.y = this.cars[game.g_player.car].y - 4.5;
        game.input.addPointer();
        if (game.g_upgrades_flag) {
            game.g_upgrades_flag = false;
            this.upgrade_grp.visible = true;
            this.main_grp.visible = false;
            this.buy_level_grp.visible = false;
            this.buy_car_grp.visible = false;
            return this.showUpgrades();
        }
    };

    MenuState.prototype.initAdFlow = function() {
        var back_spr, btn, spr, text, txt;
        this.add_coins_flow_grp = game.add.group();
        this.add_coins_flow_grp.visible = false;
        spr = game.add.sprite(0, 0, 'block.png');
        this.add_coins_flow_grp.add(spr);
        spr.inputEnabled = true;
        back_spr = game.add.sprite(0, 0, 'gui', 'w_0008_watch_dialog.png');
        back_spr.anchor.setTo(0.5);
        back_spr.x = game.width / 2;
        back_spr.y = game.height / 2;
        this.add_coins_flow_grp.add(back_spr);
        //var style_label = {font: "" + 25 + "px Bowlby One SC", fill: "#ffffff", align: "center"};
        text = game.add.text(back_spr.x, back_spr.y - 150, this.strings.add_more_coins, style_label);
        this.add_coins_flow_grp.add(text);
        text.anchor.setTo(0.5);
        text.strokeThickness = 5;
        btn = game.add.button(back_spr.x, back_spr.y, 'gui', this.addCoinsFlowClk, this, 'watch.png', 'watch.png', 'watch_pushed.png');
        btn.anchor.setTo(0.5);
        this.add_coins_flow_grp.add(btn);
        text = game.add.text(back_spr.x, back_spr.y + 147, this.strings.watch, style_label);
        this.add_coins_flow_grp.add(text);
        text.anchor.setTo(0.5);
        text.strokeThickness = 5;
        text = game.add.text(back_spr.x, back_spr.y + 187, this.strings.earn_xxx_coins, style_label);
        this.add_coins_flow_grp.add(text);
        text.anchor.setTo(0.5);
        text.strokeThickness = 5;
        btn = game.add.button(back_spr.x + 150, back_spr.y - 235, 'gui', this.closeAddCoinsFlowClk, this, 'cancel_button_small.png', 'cancel_button_small.png', 'cancel_button_pushed_small.png');
        btn.anchor.setTo(0.5);
        this.add_coins_flow_grp.add(btn);
        this.ne_coins_flow_grp = game.add.group();
        this.ne_coins_flow_grp.visible = false;
        spr = game.add.sprite(0, 0, 'block.png');
        this.ne_coins_flow_grp.add(spr);
        spr.inputEnabled = true;
        back_spr = game.add.sprite(0, 0, 'gui', 'w_0008_watch_dialog.png');
        back_spr.anchor.setTo(0.5);
        back_spr.x = game.width / 2;
        back_spr.y = game.height / 2;
        this.ne_coins_flow_grp.add(back_spr);
        text = createText(back_spr.x, back_spr.y - 160, this.strings.not_enough_coins, style_label) //game.add.text(back_spr.x, back_spr.y - 160, this.strings.not_enough_coins, style_label);
        this.ne_coins_flow_grp.add(text);
        text.anchor.setTo(0.5);
        text.strokeThickness = 5;
        btn = game.add.button(back_spr.x, back_spr.y, 'gui', this.neCoinsFlowClk, this, 'watch.png', 'watch.png', 'watch_pushed.png');
        btn.anchor.setTo(0.5);
        this.ne_coins_flow_grp.add(btn);
        text = game.add.text(back_spr.x, back_spr.y + 147, this.strings.watch, style_label);
        this.ne_coins_flow_grp.add(text);
        text.anchor.setTo(0.5);
        text.strokeThickness = 5;
        text = game.add.text(back_spr.x, back_spr.y + 187, this.strings.earn_xxx_coins, style_label);
        this.ne_coins_flow_grp.add(text);
        text.anchor.setTo(0.5);
        text.strokeThickness = 5;
        btn = game.add.button(back_spr.x + 150, back_spr.y - 235, 'gui', this.closeNeCoinsFlowClk, this, 'cancel_button_small.png', 'cancel_button_small.png', 'cancel_button_pushed_small.png');
        btn.anchor.setTo(0.5);
        this.ne_coins_flow_grp.add(btn);
        this.no_video_flow_grp = game.add.group();
        this.no_video_flow_grp.visible = false;
        spr = game.add.sprite(0, 0, 'block.png');
        this.no_video_flow_grp.add(spr);
        spr.inputEnabled = true;
        back_spr = game.add.sprite(0, 0, 'gui', 'w_0008_watch_dialog.png');
        back_spr.anchor.setTo(0.5);
        back_spr.x = game.width / 2;
        back_spr.y = game.height / 2;
        this.no_video_flow_grp.add(back_spr);
        text = game.add.text(back_spr.x, back_spr.y, this.strings.not_videos, style_label);
        this.no_video_flow_grp.add(text);
        text.anchor.setTo(0.5);
        text.strokeThickness = 5;
        btn = game.add.button(back_spr.x + 150, back_spr.y - 235, 'gui', this.closeNoVideoFlowClk, this, 'cancel_button_small.png', 'cancel_button_small.png', 'cancel_button_pushed_small.png');
        btn.anchor.setTo(0.5);
        this.no_video_flow_grp.add(btn);
        this.th_video_flow_grp = game.add.group();
        this.th_video_flow_grp.visible = false;
        spr = game.add.sprite(0, 0, 'block.png');
        this.th_video_flow_grp.add(spr);
        spr.inputEnabled = true;
        back_spr = game.add.sprite(0, 0, 'gui', 'w_0008_watch_dialog.png');
        back_spr.anchor.setTo(0.5);
        back_spr.x = game.width / 2;
        back_spr.y = game.height / 2;
        this.th_video_flow_grp.add(back_spr);
        text = game.add.text(back_spr.x, back_spr.y - 150, this.strings.thanks_for_watching, style_label);
        this.th_video_flow_grp.add(text);
        text.anchor.setTo(0.5);
        text.strokeThickness = 5;
        if (this.ad_coins) {
            txt = this.strings.you_get + ' ' + this.ad_coins;
        }
        this.th_video_flow_text = game.add.text(back_spr.x - 20, back_spr.y - 30, txt, style_label);
        this.th_video_flow_grp.add(this.th_video_flow_text);
        this.th_video_flow_text.anchor.setTo(0.5);
        this.th_video_flow_text.strokeThickness = 5;
        spr = game.add.sprite(back_spr.x + 70, back_spr.y - 54, 'gui', 'coin_gui.png');
        spr.scale.x = 0.7;
        spr.scale.y = 0.7;
        this.th_video_flow_grp.add(spr);
        btn = game.add.button(back_spr.x, back_spr.y + 140, 'gui', this.closeThVidoFlowClk, this, 'apply_button.png', 'apply_button.png', 'apply_button_push.png');
        btn.anchor.setTo(0.5);
        return this.th_video_flow_grp.add(btn);
    };

    MenuState.prototype.addCoinsFlowClk = function() {
        if (game.device.webAudio && game.g_player.sound) {
            // this.button_snd.play();
            game.playMusic.button_snd.play();
        }
        game.sound._muted == false ? (game.sound.setMute(), musicFlag = true) : musicFlag = false;
        SG_Hooks.triggerIncentivise(this.addIncentiviseFinished);
    };

    MenuState.prototype.neCoinsFlowClk = function() {
        if (game.device.webAudio && game.g_player.sound) {
            g_menu.button_snd.play();
        }
        game.sound._muted == false ? (game.sound.setMute(), musicFlag = true) : musicFlag = false;
        SG_Hooks.triggerIncentivise(this.neIncentiviseFinished);
    };

    MenuState.prototype.addIncentiviseFinished = function(result) {
        if (result) {
            g_menu.add_coins_flow_grp.visible = false;
            g_menu.th_video_flow_grp.visible = true;
            g_menu.ad_coins = 200; //Math.floor(Math.random() * 250 + 500);
            game.g_player.coins += g_menu.ad_coins;
            g_menu.th_video_flow_text.text = g_menu.strings.you_get + ' ' + g_menu.ad_coins;
            if (game.device.localStorage) {
                localStorage.setItem('up_hill_racing_savedata', JSON.stringify(game.g_player));
            }
            g_menu.money_text.text = '' + game.g_player.coins;
            g_menu.money_spr.x = g_menu.money_text.x - g_menu.money_text.width / 2 - g_menu.money_spr.width - 5;
            g_menu.money_spr.y = g_menu.money_text.y - 24;
            g_menu.money_text_up.text = '' + game.g_player.coins;
            g_menu.money_spr_up.x = g_menu.money_text_up.x - g_menu.money_text_up.width / 2 - g_menu.money_spr_up.width - 5;
            return g_menu.money_spr_up.y = g_menu.money_text_up.y - 21;
        } else {
            g_menu.add_coins_flow_grp = false;
            return g_menu.no_video_flow_grp.visible = true;
        }
        g_menu.add_coins_flow_grp.visible = false;
        musicFlag && game.sound.unsetMute();
    };

    MenuState.prototype.neIncentiviseFinished = function(result) {
        if (result) {
            g_menu.add_coins_flow_grp.visible = false;
            g_menu.ne_coins_flow_grp.visible = false;
            g_menu.th_video_flow_grp.visible = true;
            g_menu.ad_coins = 200; //Math.floor(Math.random() * 250 + 500);
            game.g_player.coins += g_menu.ad_coins;
            g_menu.th_video_flow_text.text = g_menu.strings.you_get + ' ' + g_menu.ad_coins;
            if (game.device.localStorage) {
                localStorage.setItem('up_hill_racing_savedata', JSON.stringify(game.g_player));
            }
            g_menu.money_text.text = '' + game.g_player.coins;
            g_menu.money_spr.x = g_menu.money_text.x - g_menu.money_text.width / 2 - g_menu.money_spr.width - 5;
            g_menu.money_spr.y = g_menu.money_text.y - 24;
            g_menu.money_text_up.text = '' + game.g_player.coins;
            g_menu.money_spr_up.x = g_menu.money_text_up.x - g_menu.money_text_up.width / 2 - g_menu.money_spr_up.width - 5;
            return g_menu.money_spr_up.y = g_menu.money_text_up.y - 21;
        } else {
            g_menu.ne_coins_flow_grp = false;
            return g_menu.no_video_flow_grp.visible = true;
        }
        g_menu.add_coins_flow_grp.visible = false;
        musicFlag && game.sound.unsetMute();
    };

    MenuState.prototype.closeAddCoinsFlowClk = function() {
        this.add_coins_flow_grp.visible = false;
        if (game.device.webAudio && game.g_player.sound) {
            // this.button_snd.play();
            game.playMusic.button_snd.play();
        }
    };

    MenuState.prototype.closeNeCoinsFlowClk = function() {
        this.ne_coins_flow_grp.visible = false;
        this.add_coins_flow_grp.visible = false;
        if (game.device.webAudio && game.g_player.sound) {
            // this.button_snd.play();
            game.playMusic.button_snd.play();
        }
    };

    MenuState.prototype.closeNoVideoFlowClk = function() {
        this.no_video_flow_grp.visible = false;
        this.add_coins_flow_grp.visible = false;
        if (game.device.webAudio && game.g_player.sound) {
            // this.button_snd.play();
            game.playMusic.button_snd.play();
        }
    };

    MenuState.prototype.closeThVidoFlowClk = function() {
        this.th_video_flow_grp.visible = false;
        this.add_coins_flow_grp.visible = false;
        if (game.device.webAudio && game.g_player.sound) {
            // this.button_snd.play();
            game.playMusic.button_snd.play();
        }
    };

    MenuState.prototype.morecoinsClk = function() {
        alert('here')
        return this.add_coins_flow_grp.visible = true;
    };

    MenuState.prototype.showUpgrades = function() {
        var index, step, xx, yy;
        index = game.g_player.upgrades[game.g_player.car].upgrades_susp + 1;
        this.up1_txt.text = '' + (index + 1);
        if (index < this.game_data.cars[game.g_player.car].upgrades_susp.length) {
            this.up1_price_txt.visible = true;
            this.up1_price_spr.visible = true;
            this.up1_price_txt.text = '' + this.game_data.cars[game.g_player.car].upgrades_susp[index].price;
            this.up1_price_spr.x = this.up1_price_txt.x - this.up1_price_txt.width / 2 - this.up1_price_spr.width - 5;
            this.up1_price_spr.y = this.up1_price_txt.y - 21;
        } else {
            this.up1_price_txt.visible = false;
            this.up1_price_spr.visible = false;
        }
        index = game.g_player.upgrades[game.g_player.car].upgrades_engine + 1;
        this.up2_txt.text = '' + (index + 1);
        if (index < this.game_data.cars[game.g_player.car].upgrades_engine.length) {
            this.up2_price_txt.visible = true;
            this.up2_price_spr.visible = true;
            this.up2_price_txt.text = '' + this.game_data.cars[game.g_player.car].upgrades_engine[index].price;
            this.up2_price_spr.x = this.up2_price_txt.x - this.up2_price_txt.width / 2 - this.up2_price_spr.width - 5;
            this.up2_price_spr.y = this.up2_price_txt.y - 21;
        } else {
            this.up2_price_txt.visible = false;
            this.up2_price_spr.visible = false;
        }
        index = game.g_player.upgrades[game.g_player.car].upgrades_tyre + 1;
        this.up3_txt.text = '' + (index + 1);
        if (index < this.game_data.cars[game.g_player.car].upgrades_tyre.length) {
            this.up3_price_txt.visible = true;
            this.up3_price_spr.visible = true;
            this.up3_price_txt.text = '' + this.game_data.cars[game.g_player.car].upgrades_tyre[index].price;
            this.up3_price_spr.x = this.up3_price_txt.x - this.up3_price_txt.width / 2 - this.up3_price_spr.width - 5;
            this.up3_price_spr.y = this.up3_price_txt.y - 21;
        } else {
            this.up3_price_txt.visible = false;
            this.up3_price_spr.visible = false;
        }
        index = game.g_player.upgrades[game.g_player.car].upgrades_fuel + 1;
        this.up4_txt.text = '' + (index + 1);
        if (index < this.game_data.cars[game.g_player.car].upgrades_fuel.length) {
            this.up4_price_txt.visible = true;
            this.up4_price_spr.visible = true;
            this.up4_price_txt.text = '' + this.game_data.cars[game.g_player.car].upgrades_fuel[index].price;
            this.up4_price_spr.x = this.up4_price_txt.x - this.up4_price_txt.width / 2 - this.up4_price_spr.width - 5;
            this.up4_price_spr.y = this.up4_price_txt.y - 21;
        } else {
            this.up4_price_txt.visible = false;
            this.up4_price_spr.visible = false;
        }
        index = game.g_player.upgrades[game.g_player.car].upgrades_spec + 1;
        this.up5_txt.text = '' + (index + 1);
        if (index < this.game_data.cars[game.g_player.car].upgrades_spec.length) {
            this.up5_price_txt.visible = true;
            this.up5_price_spr.visible = true;
            this.up5_price_txt.text = '' + this.game_data.cars[game.g_player.car].upgrades_spec[index].price;
            this.up5_price_spr.x = this.up5_price_txt.x - this.up5_price_txt.width / 2 - this.up5_price_spr.width - 5;
            this.up5_price_spr.y = this.up5_price_txt.y - 21;
        } else {
            this.up5_price_txt.visible = false;
            this.up5_price_spr.visible = false;
        }
        xx = 30;
        yy = 60;
        step = 185;
        if (this.cur_upg === 'susp') {
            index = game.g_player.upgrades[game.g_player.car].upgrades_susp + 1;
            if (index < this.game_data.cars[game.g_player.car].upgrades_susp.length) {
                this.up_desc_txt.text = this.strings[this.game_data.cars[game.g_player.car].upgrades_susp[index].desc];
                this.buy_up_btn.visible = true;
            } else {
                this.up_desc_txt.text = this.strings['max_up'];
                this.buy_up_btn.visible = false;
            }
            this.cur_upg_spr.x = xx - 6;
            this.cur_upg_spr.y = yy - 6;
        }
        xx += step;
        if (this.cur_upg === 'engine') {
            index = game.g_player.upgrades[game.g_player.car].upgrades_engine + 1;
            if (index < this.game_data.cars[game.g_player.car].upgrades_engine.length) {
                this.up_desc_txt.text = this.strings[this.game_data.cars[game.g_player.car].upgrades_engine[index].desc];
                this.buy_up_btn.visible = true;
            } else {
                this.up_desc_txt.text = this.strings['max_up'];
                this.buy_up_btn.visible = false;
            }
            this.cur_upg_spr.x = xx - 6;
            this.cur_upg_spr.y = yy - 6;
        }
        xx += step;
        if (this.cur_upg === 'tyre') {
            index = game.g_player.upgrades[game.g_player.car].upgrades_tyre + 1;
            if (index < this.game_data.cars[game.g_player.car].upgrades_tyre.length) {
                this.up_desc_txt.text = this.strings[this.game_data.cars[game.g_player.car].upgrades_tyre[index].desc];
                this.buy_up_btn.visible = true;
            } else {
                this.up_desc_txt.text = this.strings['max_up'];
                this.buy_up_btn.visible = false;
            }
            this.cur_upg_spr.x = xx - 6;
            this.cur_upg_spr.y = yy - 6;
        }
        xx += step;
        if (this.cur_upg === 'fuel') {
            index = game.g_player.upgrades[game.g_player.car].upgrades_fuel + 1;
            if (index < this.game_data.cars[game.g_player.car].upgrades_fuel.length) {
                this.up_desc_txt.text = this.strings[this.game_data.cars[game.g_player.car].upgrades_fuel[index].desc];
                this.buy_up_btn.visible = true;
            } else {
                this.up_desc_txt.text = this.strings['max_up'];
                this.buy_up_btn.visible = false;
            }
            this.cur_upg_spr.x = xx - 6;
            this.cur_upg_spr.y = yy - 6;
        }
        xx += step;
        if (this.cur_upg === 'spec') {
            index = game.g_player.upgrades[game.g_player.car].upgrades_spec + 1;
            if (index < this.game_data.cars[game.g_player.car].upgrades_spec.length) {
                this.up_desc_txt.text = this.strings[this.game_data.cars[game.g_player.car].upgrades_spec[index].desc];
                this.buy_up_btn.visible = true;
            } else {
                this.up_desc_txt.text = this.strings['max_up'];
                this.buy_up_btn.visible = false;
            }
            this.cur_upg_spr.x = xx - 6;
            this.cur_upg_spr.y = yy - 6;
        }
        this.money_text_up.text = '' + game.g_player.coins;
        this.money_spr_up.x = this.money_text_up.x - this.money_text_up.width / 2 - this.money_spr_up.width - 5;
        return this.money_spr_up.y = this.money_text_up.y - 21;
    };

    MenuState.prototype.update = function() {
        var ref, ref1, yy;
        game.camera.x = 0;
        game.camera.y = 0;
        if (this.down_flag) {
            yy = game.input.activePointer.y - game.camera.y;
            if ((350 < (ref = this.sx) && ref < 630)) {
                this.levels_grp.y -= this.sy - yy;
                if (this.levels_grp.y > 0) {
                    this.levels_grp.y = 0;
                }
                if (this.levels_grp.y < -this.scroll_lim) {
                    this.levels_grp.y = -this.scroll_lim;
                }
                this.scroll_levels.y -= -(this.sy - yy) / 1.36;
                if (this.scroll_levels.y < 80) {
                    this.scroll_levels.y = 80;
                }
                if (this.scroll_levels.y > this.scroll_lim / 1.36) {
                    this.scroll_levels.y = this.scroll_lim / 1.36;
                }
            }
            if ((40 < (ref1 = this.sx) && ref1 < 310)) {
                this.cars_grp.y -= this.sy - yy;
                if (this.cars_grp.y > 0) {
                    this.cars_grp.y = 0;
                }
                if (this.cars_grp.y < -this.scroll_lim) {
                    this.cars_grp.y = -this.scroll_lim;
                }
                this.scroll_cars.y -= -(this.sy - yy) / 1.36;
                if (this.scroll_cars.y < 80) {
                    this.scroll_cars.y = 80;
                }
                if (this.scroll_cars.y > this.scroll_lim / 1.36) {
                    this.scroll_cars.y = this.scroll_lim / 1.36;
                }
            }
            this.sy = yy;
        }
        return this.duration = game.input.activePointer.duration;
    };

    MenuState.prototype.down = function(sp, pointer) {
        this.down_flag = true;
        this.sx = game.input.activePointer.x - game.camera.x;
        return this.sy = game.input.activePointer.y - game.camera.y;
    };

    MenuState.prototype.up = function(sp, pointer) {
        var car, dx, dy, j, k, len, len1, level, ref, ref1, ref2, ref3, ref4, ref5, results;
        this.down_flag = false;
        dx = Math.abs(this.sx - (game.input.activePointer.x - game.camera.x));
        dy = Math.abs(this.sy - (game.input.activePointer.y - game.camera.y));
        if (this.duration < 180 || (dx < 1 && dy < 1)) {
            ref = this.levels;
            for (j = 0, len = ref.length; j < len; j++) {
                level = ref[j];
                if ((level.top - game.camera.y + this.levels_grp.y < (ref1 = this.sy) && ref1 < level.bottom - game.camera.y + this.levels_grp.y)) {
                    if ((level.left - game.camera.x < (ref2 = this.sx) && ref2 < level.right - game.camera.x)) {
                        if (game.g_player.open_levels[level.index]) {
                            this.selected_level_spr.x = level.x - 7;
                            this.selected_level_spr.y = level.y - 4.5;
                            game.g_player.level = level.index;
                        } else {
                            this.showBuyLevel(level);
                        }
                    }
                }
            }
            ref3 = this.cars;
            results = [];
            for (k = 0, len1 = ref3.length; k < len1; k++) {
                car = ref3[k];
                if ((car.top - game.camera.y + this.cars_grp.y < (ref4 = this.sy) && ref4 < car.bottom - game.camera.y + this.cars_grp.y)) {
                    if ((car.left - game.camera.x < (ref5 = this.sx) && ref5 < car.right - game.camera.x)) {
                        if (game.g_player.open_cars[car.index]) {
                            this.selected_car_spr.x = car.x - 7;
                            this.selected_car_spr.y = car.y - 4.5;
                            results.push(game.g_player.car = car.index);
                        } else {
                            results.push(this.showBuyCar(car));
                        }
                    } else {
                        results.push(void 0);
                    }
                } else {
                    results.push(void 0);
                }
            }
            return results;
        }
    };

    MenuState.prototype.showBuyUp = function() {
        var index, price;
        if (game.device.webAudio && game.g_player.sound) {
            // this.button_snd.play();
            game.playMusic.button_snd.play();
        }
        if (this.cur_upg === 'susp') {
            index = game.g_player.upgrades[game.g_player.car].upgrades_susp + 1;
            if (index >= this.game_data.cars[game.g_player.car].upgrades_susp.length) {
                return;
            }
            price = this.game_data.cars[game.g_player.car].upgrades_susp[index].price;
        }
        if (this.cur_upg === 'engine') {
            index = game.g_player.upgrades[game.g_player.car].upgrades_engine + 1;
            if (index >= this.game_data.cars[game.g_player.car].upgrades_engine.length) {
                return;
            }
            price = this.game_data.cars[game.g_player.car].upgrades_engine[index].price;
        }
        if (this.cur_upg === 'tyre') {
            index = game.g_player.upgrades[game.g_player.car].upgrades_tyre + 1;
            if (index >= this.game_data.cars[game.g_player.car].upgrades_tyre.length) {
                return;
            }
            price = this.game_data.cars[game.g_player.car].upgrades_tyre[index].price;
        }
        if (this.cur_upg === 'fuel') {
            index = game.g_player.upgrades[game.g_player.car].upgrades_fuel + 1;
            if (index >= this.game_data.cars[game.g_player.car].upgrades_fuel.length) {
                return;
            }
            price = this.game_data.cars[game.g_player.car].upgrades_fuel[index].price;
        }
        if (this.cur_upg === 'spec') {
            index = game.g_player.upgrades[game.g_player.car].upgrades_spec + 1;
            if (index >= this.game_data.cars[game.g_player.car].upgrades_spec.length) {
                return;
            }
            price = this.game_data.cars[game.g_player.car].upgrades_spec[index].price;
        }
        // this.buy_up_price.text = 'Price: ' + price;
        this.buy_up_price.text = this.strings.price + price;
        this.buy_up_money_spr.x = this.buy_up_price.x + this.buy_up_price.width / 2 + 5;
        this.buy_up_money_spr.y = this.buy_up_price.y - 24;
        return this.buy_up_grp.visible = true;
    };

    MenuState.prototype.buyUpClk = function() {
        return this.showBuyUp();
    };

    MenuState.prototype.buyUpYClk = function() {
        var index, price;
        if (this.cur_upg === 'susp') {
            index = game.g_player.upgrades[game.g_player.car].upgrades_susp + 1;
            price = this.game_data.cars[game.g_player.car].upgrades_susp[index].price;
        }
        if (this.cur_upg === 'engine') {
            index = game.g_player.upgrades[game.g_player.car].upgrades_engine + 1;
            price = this.game_data.cars[game.g_player.car].upgrades_engine[index].price;
        }
        if (this.cur_upg === 'tyre') {
            index = game.g_player.upgrades[game.g_player.car].upgrades_tyre + 1;
            price = this.game_data.cars[game.g_player.car].upgrades_tyre[index].price;
        }
        if (this.cur_upg === 'fuel') {
            index = game.g_player.upgrades[game.g_player.car].upgrades_fuel + 1;
            price = this.game_data.cars[game.g_player.car].upgrades_fuel[index].price;
        }
        if (this.cur_upg === 'spec') {
            index = game.g_player.upgrades[game.g_player.car].upgrades_spec + 1;
            price = this.game_data.cars[game.g_player.car].upgrades_spec[index].price;
        }
        if (game.g_player.coins >= price) {
            game.g_player.coins -= price;
            this.buy_up_grp.visible = false;
            if (game.device.webAudio && game.g_player.sound) {
                this.buy_snd.play();
            }
            if (this.cur_upg === 'susp') {
                game.g_player.upgrades[game.g_player.car].upgrades_susp += 1;
            }
            if (this.cur_upg === 'engine') {
                game.g_player.upgrades[game.g_player.car].upgrades_engine += 1;
            }
            if (this.cur_upg === 'tyre') {
                game.g_player.upgrades[game.g_player.car].upgrades_tyre += 1;
            }
            if (this.cur_upg === 'fuel') {
                game.g_player.upgrades[game.g_player.car].upgrades_fuel += 1;
            }
            if (this.cur_upg === 'spec') {
                game.g_player.upgrades[game.g_player.car].upgrades_spec += 1;
            }
            if (game.device.localStorage) {
                localStorage.setItem('up_hill_racing_savedata', JSON.stringify(game.g_player));
            }
            this.showUpgrades();
            this.money_text.text = '' + game.g_player.coins;
            this.money_spr.x = this.money_text.x - this.money_text.width / 2 - this.money_spr.width - 5;
            return this.money_spr.y = this.money_text.y - 24;
        } else {
            if (this.isEnabledIncentivise) {
                this.buy_up_grp.visible = false;
                return this.ne_coins_flow_grp.visible = true;
            }
        }
    };

    MenuState.prototype.buyUpNClk = function() {
        if (game.device.webAudio && game.g_player.sound) {
            // this.button_snd.play();
            game.playMusic.button_snd.play();
        }
        return this.buy_up_grp.visible = false;
    };

    MenuState.prototype.up1Clk = function(spr) {
        var index;
        this.cur_upg_spr.x = spr.x - 6;
        this.cur_upg_spr.y = spr.y - 6;
        index = game.g_player.upgrades[game.g_player.car].upgrades_susp + 1;
        if (index < this.game_data.cars[game.g_player.car].upgrades_susp.length) {
            this.up_desc_txt.text = this.strings[this.game_data.cars[game.g_player.car].upgrades_susp[index].desc];
            this.buy_up_btn.visible = true;
        } else {
            this.up_desc_txt.text = this.strings['max_up'];
            this.buy_up_btn.visible = false;
        }
        return this.cur_upg = 'susp';
    };

    MenuState.prototype.up2Clk = function(spr) {
        var index;
        this.cur_upg_spr.x = spr.x - 6;
        this.cur_upg_spr.y = spr.y - 6;
        index = game.g_player.upgrades[game.g_player.car].upgrades_engine + 1;
        if (index < this.game_data.cars[game.g_player.car].upgrades_engine.length) {
            this.up_desc_txt.text = this.strings[this.game_data.cars[game.g_player.car].upgrades_engine[index].desc];
            this.buy_up_btn.visible = true;
        } else {
            this.up_desc_txt.text = this.strings['max_up'];
            this.buy_up_btn.visible = false;
        }
        return this.cur_upg = 'engine';
    };

    MenuState.prototype.up3Clk = function(spr) {
        var index;
        this.cur_upg_spr.x = spr.x - 6;
        this.cur_upg_spr.y = spr.y - 6;
        index = game.g_player.upgrades[game.g_player.car].upgrades_tyre + 1;
        if (index < this.game_data.cars[game.g_player.car].upgrades_tyre.length) {
            this.up_desc_txt.text = this.strings[this.game_data.cars[game.g_player.car].upgrades_tyre[index].desc];
            this.buy_up_btn.visible = true;
        } else {
            this.up_desc_txt.text = this.strings['max_up'];
            this.buy_up_btn.visible = false;
        }
        return this.cur_upg = 'tyre';
    };

    MenuState.prototype.up4Clk = function(spr) {
        var index;
        this.cur_upg_spr.x = spr.x - 6;
        this.cur_upg_spr.y = spr.y - 6;
        index = game.g_player.upgrades[game.g_player.car].upgrades_fuel + 1;
        if (index < this.game_data.cars[game.g_player.car].upgrades_fuel.length) {
            this.up_desc_txt.text = this.strings[this.game_data.cars[game.g_player.car].upgrades_fuel[index].desc];
            this.buy_up_btn.visible = true;
        } else {
            this.up_desc_txt.text = this.strings['max_up'];
            this.buy_up_btn.visible = false;
        }
        return this.cur_upg = 'fuel';
    };

    MenuState.prototype.up5Clk = function(spr) {
        var index;
        this.cur_upg_spr.x = spr.x - 6;
        this.cur_upg_spr.y = spr.y - 6;
        index = game.g_player.upgrades[game.g_player.car].upgrades_spec + 1;
        if (index < this.game_data.cars[game.g_player.car].upgrades_spec.length) {
            this.up_desc_txt.text = this.strings[this.game_data.cars[game.g_player.car].upgrades_spec[index].desc];
            this.buy_up_btn.visible = true;
        } else {
            this.up_desc_txt.text = this.strings['max_up'];
            this.buy_up_btn.visible = false;
        }
        return this.cur_upg = 'spec';
    };

    MenuState.prototype.upgradeBackClk = function() {
        if (game.device.webAudio && game.g_player.sound) {
            // this.button_snd.play();
            game.playMusic.button_snd.play();
        }
        this.upgrade_grp.visible = false;
        this.main_grp.visible = true;
        this.buy_car_grp.visible = false;
        return this.buy_level_grp.visible = false;
    };

    MenuState.prototype.upgradePlayClk = function() {
        if (game.device.webAudio && game.g_player.sound) {
            // g_music = game.add.audio('music');
            // this.button_snd.play();
            // g_music.loopFull(0.6);
            game.playMusic.button_snd.play();
            if (!game.playMusic.g_music.playing()) {
                game.playMusic.g_music.play();
            }
        }
        // if (game.device.webAudio && game.g_player.sound) {
        //   this.button_snd.play();
        // }
        this.upgrade_grp.visible = false;
        this.main_grp.visible = false;
        return game.state.start('play', true, false);
    };

    // MenuState.prototype.gamesClk = function() {
    //   if (game.device.webAudio && game.g_player.sound) {
    //     this.button_snd.play();
    //   }
    //   this.buy_car_grp.visible = false;
    //   this.buy_level_grp.visible = false;
    //   SG.redirectToPortal();
    //return window.open('http://m.softgames.de/', '_blank');
    // };

    MenuState.prototype.playClk = function() {
        // here
        if (game.device.webAudio && game.g_player.sound) {
            // this.button_snd.play();
            game.playMusic.button_snd.play();
        }
        this.upgrade_grp.visible = true;
        this.main_grp.visible = false;
        this.buy_level_grp.visible = false;
        this.buy_car_grp.visible = false;
        return this.showUpgrades();
    };

    MenuState.prototype.soundClk = function() {
        game.g_player.sound = !game.g_player.sound;
        // if (game.device.webAudio && game.g_player.sound) {
        //   this.button_snd.play();
        //   game.playMusic.button_snd.play();
        // }
        if (game.g_player.sound) {
            this.sound_btn.setFrames('sound_on.png', 'sound_on.png', 'sound_on_pushed.png');
            if (game.device.webAudio) {
                game.playMusic.button_snd.play();
                // g_music.loopFull(0.6);
                // if (!game.playMusic.g_music.playing()) {
                //   game.playMusic.g_music.play();
                // }
            }
        } else {
            this.sound_btn.setFrames('sound_off.png', 'sound_off.png', 'sound_off_pushed.png');
            if (game.device.webAudio) {
                // g_music.stop();
                // game.playMusic.g_music.pause();
            }
        }
        if (game.device.localStorage) {
            return localStorage.setItem('up_hill_racing_savedata', JSON.stringify(game.g_player));
        }
    };

    MenuState.prototype.showBuyLevel = function(level) {
        if (game.device.webAudio && game.g_player.sound) {
            // this.button_snd.play();
            game.playMusic.button_snd.play();
        }
        this.buy_level_grp.visible = true;
        this.cur_buy_level = level;
        // this.buy_level_price.text = 'Price: ' + this.game_data.levels[this.cur_buy_level.index].price;
        this.buy_level_price.text = this.strings.price + this.game_data.levels[this.cur_buy_level.index].price;
        this.buy_level_money_spr.x = this.buy_level_price.x + this.buy_level_price.width / 2 + 5;
        this.buy_level_money_spr.y = this.buy_level_price.y - 24;
        return this.buy_car_grp.visible = false;
    };

    MenuState.prototype.buyLevelYClk = function() {
        if (game.g_player.coins >= this.game_data.levels[this.cur_buy_level.index].price) {
            game.g_player.coins -= this.game_data.levels[this.cur_buy_level.index].price;
            if (game.device.webAudio && game.g_player.sound) {
                this.buy_snd.play();
            }
            this.buy_level_grp.visible = false;
            this.money_text.text = '' + game.g_player.coins;
            this.money_spr.x = this.money_text.x - this.money_text.width / 2 - this.money_spr.width - 5;
            this.money_spr.y = this.money_text.y - 24;
            if (this.cur_buy_level.lock_spr != null) {
                this.cur_buy_level.lock_spr.visible = false;
            }
            game.g_player.open_levels[this.cur_buy_level.index] = true;
            if (game.device.localStorage) {
                localStorage.setItem('up_hill_racing_savedata', JSON.stringify(game.g_player));
            }
            this.selected_level_spr.x = this.cur_buy_level.x - 7;
            this.selected_level_spr.y = this.cur_buy_level.y - 4.5;
            return game.g_player.level = this.cur_buy_level.index;
        } else {
            if (this.isEnabledIncentivise) {
                this.buy_level_grp.visible = false;
                return this.ne_coins_flow_grp.visible = true;
            }
        }
    };

    MenuState.prototype.buyLevelNClk = function() {
        if (game.device.webAudio && game.g_player.sound) {
            // this.button_snd.play();
            game.playMusic.button_snd.play();
        }
        return this.buy_level_grp.visible = false;
    };

    MenuState.prototype.showBuyCar = function(level) {
        if (game.device.webAudio && game.g_player.sound) {
            // this.button_snd.play();
            game.playMusic.button_snd.play();
        }
        this.buy_car_grp.visible = true;
        this.cur_buy_car = level;
        // this.buy_car_price.text = 'Price: ' + this.game_data.cars[this.cur_buy_car.index].price;
        this.buy_car_price.text = this.strings.price + this.game_data.cars[this.cur_buy_car.index].price;
        this.buy_car_money_spr.x = this.buy_car_price.x + this.buy_car_price.width / 2 + 5;
        this.buy_car_money_spr.y = this.buy_car_price.y - 24;
        return this.buy_level_grp.visible = false;
    };

    MenuState.prototype.buyCarYClk = function() {
        if (game.g_player.coins >= this.game_data.cars[this.cur_buy_car.index].price) {
            game.g_player.coins -= this.game_data.cars[this.cur_buy_car.index].price;
            if (game.device.webAudio && game.g_player.sound) {
                this.buy_snd.play();
            }
            this.buy_car_grp.visible = false;
            this.money_text.text = '' + game.g_player.coins;
            this.money_spr.x = this.money_text.x - this.money_text.width / 2 - this.money_spr.width - 5;
            this.money_spr.y = this.money_text.y - 24;
            if (this.cur_buy_car.lock_spr != null) {
                this.cur_buy_car.lock_spr.visible = false;
            }
            game.g_player.open_cars[this.cur_buy_car.index] = true;
            if (game.device.localStorage) {
                localStorage.setItem('up_hill_racing_savedata', JSON.stringify(game.g_player));
            }
            this.selected_car_spr.x = this.cur_buy_car.x - 7;
            this.selected_car_spr.y = this.cur_buy_car.y - 4.5;
            return game.g_player.car = this.cur_buy_car.index;
        } else {
            if (this.isEnabledIncentivise) {
                this.buy_car_grp.visible = false;
                return this.ne_coins_flow_grp.visible = true;
            }
        }
    };

    MenuState.prototype.buyCarNClk = function() {
        if (game.device.webAudio && game.g_player.sound) {
            // this.button_snd.play();
            game.playMusic.button_snd.play();
        }
        return this.buy_car_grp.visible = false;
    };

    return MenuState;

})();